name: Build and Test Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: dind-demo
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use common steps
        id: common
        uses: ./.github/actions/common

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract commit hash
        id: extract
        run: |
          echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    
      - name: Debug
        run: |
          echo "BRANCH_NAME: ${{ env.BRANCH_NAME }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image with commit hash tag
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.common.outputs.owner_lowercase }}/${{ env.IMAGE_NAME }}:${{ steps.extract.outputs.commit_hash }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: CACHEBUST=$(date +%s)

      - name: Test the image
        run: |
          docker run --rm ghcr.io/${{ steps.common.outputs.owner_lowercase }}/${{ env.IMAGE_NAME }}:${{ steps.extract.outputs.commit_hash }} curl --version

      - name: Push image with branch name tag
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ghcr.io/${{ steps.common.outputs.owner_lowercase }}/${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}

      - name: Cleanup old image tags
        uses: actions/github-script@v7
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        with:
          script: |
            const script = require('.github/scripts/cleanup-artifacts.js')
            console.log(script({github, context}))
